//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TrackableEntities.EF.Tests.Edmx
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;
    using TrackableEntities;
    using TrackableEntities.Client;
    
    [JsonObject(IsReference = true)]
    [DataContract(IsReference = true, Namespace = "http://schemas.datacontract.org/2004/07/TrackableEntities.Models")]
    public partial class Localization : ModelBase<Localization>, IEquatable<Localization>, ITrackable
    {
        
    	[DataMember]
    	public string fk_resource_key
    	{ 
    		get { return _fk_resource_key; }
    		set
    		{
    			if (Equals(value, _fk_resource_key)) return;
    			_fk_resource_key = value;
    			NotifyPropertyChanged(m => m.fk_resource_key);
    		}
    	}
    	private string _fk_resource_key;
        
    	[DataMember]
    	public string resource_value
    	{ 
    		get { return _resource_value; }
    		set
    		{
    			if (Equals(value, _resource_value)) return;
    			_resource_value = value;
    			NotifyPropertyChanged(m => m.resource_value);
    		}
    	}
    	private string _resource_value;
        
    	[DataMember]
    	public int fk_culture_codes_id
    	{ 
    		get { return _fk_culture_codes_id; }
    		set
    		{
    			if (Equals(value, _fk_culture_codes_id)) return;
    			_fk_culture_codes_id = value;
    			NotifyPropertyChanged(m => m.fk_culture_codes_id);
    		}
    	}
    	private int _fk_culture_codes_id;
        
    	[DataMember]
    	public int localization_id
    	{ 
    		get { return _localization_id; }
    		set
    		{
    			if (Equals(value, _localization_id)) return;
    			_localization_id = value;
    			NotifyPropertyChanged(m => m.localization_id);
    		}
    	}
    	private int _localization_id;
    
    	[DataMember]
    	public CultureCodes culture_codes
    	{
    		get { return _culture_codes; }
    		set
    		{
    			if (Equals(value, _culture_codes)) return;
    			_culture_codes = value;
    			culture_codesChangeTracker = _culture_codes == null ? null
    				: new ChangeTrackingCollection<CultureCodes> { _culture_codes };
    			NotifyPropertyChanged(m => m.culture_codes);
    		}
    	}
    	private CultureCodes _culture_codes;
    	private ChangeTrackingCollection<CultureCodes> culture_codesChangeTracker { get; set; }
    
        #region Change Tracking
    
    	[DataMember]
    	public TrackingState TrackingState { get; set; }
    
    	[DataMember]
    	public ICollection<string> ModifiedProperties { get; set; }
    
    	[JsonProperty, DataMember]
    	private Guid EntityIdentifier { get; set; }
    
    	#pragma warning disable 414
    
    	[JsonProperty, DataMember]
    	private Guid _entityIdentity = default(Guid);
    
    	#pragma warning restore 414
    
    	bool IEquatable<Localization>.Equals(Localization other)
    	{
    		if (EntityIdentifier != default(Guid))
    			return EntityIdentifier == other.EntityIdentifier;
    		return false;
    	}
    
        #endregion
    }
}
