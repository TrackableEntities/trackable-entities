//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TrackableEntities.EF.Tests.Edmx
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;
    using TrackableEntities;
    using TrackableEntities.Client;
    
    [JsonObject(IsReference = true)]
    [DataContract(IsReference = true, Namespace = "http://schemas.datacontract.org/2004/07/TrackableEntities.Models")]
    public partial class ResourceKey : ModelBase<ResourceKey>, IEquatable<ResourceKey>, ITrackable
    {
        public ResourceKey()
        {
            this.localization = new ChangeTrackingCollection<Localization>();
        }
        
    	[DataMember]
    	public int resource_key_id
    	{ 
    		get { return _resource_key_id; }
    		set
    		{
    			if (Equals(value, _resource_key_id)) return;
    			_resource_key_id = value;
    			NotifyPropertyChanged(m => m.resource_key_id);
    		}
    	}
    	private int _resource_key_id;
        
    	[DataMember]
    	public string resource_key_name
    	{ 
    		get { return _resource_key_name; }
    		set
    		{
    			if (Equals(value, _resource_key_name)) return;
    			_resource_key_name = value;
    			NotifyPropertyChanged(m => m.resource_key_name);
    		}
    	}
    	private string _resource_key_name;
    
    	[DataMember]
    	public ChangeTrackingCollection<Localization> localization
    	{
    		get { return _localization; }
    		set
    		{
    			if (Equals(value, _localization)) return;
    			_localization = value;
    			NotifyPropertyChanged(m => m.localization);
    		}
    	}
    	private ChangeTrackingCollection<Localization> _localization;
    
        #region Change Tracking
    
    	[DataMember]
    	public TrackingState TrackingState { get; set; }
    
    	[DataMember]
    	public ICollection<string> ModifiedProperties { get; set; }
    
    	[JsonProperty, DataMember]
    	private Guid EntityIdentifier { get; set; }
    
    	#pragma warning disable 414
    
    	[JsonProperty, DataMember]
    	private Guid _entityIdentity = default(Guid);
    
    	#pragma warning restore 414
    
    	bool IEquatable<ResourceKey>.Equals(ResourceKey other)
    	{
    		if (EntityIdentifier != default(Guid))
    			return EntityIdentifier == other.EntityIdentifier;
    		return false;
    	}
    
        #endregion
    }
}
